{"version":3,"sources":["helpers/sizes.js","styles/AppStyles.js","hooks/useLocalStorageReducer.js","reducers/todos.reducer.js","constants/actions.js","contexts/todos.context.js","styles/TodoStyles.js","hooks/useInputState.js","styles/EditTodoFormStyles.js","components/EditTodoForm.js","components/Todo.js","hooks/useToggleState.js","components/TodoList.js","styles/TodoFormStyles.js","components/TodoForm.js","components/TodoApp.js","components/App.js","serviceWorker.js","index.js"],"names":["size","xs","md","makeStyles","App","width","margin","sizes","header","textAlign","color","fontSize","fontWeight","useLocalStorageReducer","key","reducer","defaultValue","useReducer","value","JSON","parse","window","localStorage","getItem","String","e","state","dispatch","console","log","useEffect","setItem","stringify","action","type","id","uuid","task","completed","filter","todo","map","defaultTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","todosReducer","todos","Provider","children","Todo","height","display","alignItems","justifyContent","paddingLeft","lineHeight","overflowX","transition","background","cursor","opacity","icons","marginRight","float","initialValue","useState","setValue","target","EditTodoForm","marginBottom","input","border","borderBottom","transform","outline","toggleEditForm","classes","useStyles","useContext","useInputState","handleChange","clearValue","onSubmit","preventDefault","className","autoFocus","onChange","onClick","stopPropagation","memo","setState","toggle","useToggleState","isEditing","classname","style","overflowY","textDecoration","TodoList","TodoForm","placeholder","TodoApp","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ebdc54ab.chunk.js","sourcesContent":["export default {\n    down(size) {\n        const sizes = {\n            xs: '575.98x',\n            md: '991.98px'\n        };\n        return `@media (max-width: ${sizes[size]})`;\n    }\n};","import { makeStyles } from '@material-ui/core/styles';\nimport sizes from '../helpers/sizes';\n\nexport default makeStyles ({\n    App: {\n        width: '50%',\n        margin: '0 auto',\n        [sizes.down('md')]: {\n            width: '70%'\n        },\n        [sizes.down('xs')]: {\n            width: '90%'\n        }\n    },\n    header: {\n        textAlign: 'center',\n        '& h1': {\n            color: '#2c3e50',\n            margin: '5vh 0 0 0',\n            fontSize: '5rem',\n            fontWeight: '300',\n            '& span': {\n                fontWeight: '700'\n            }\n        },\n        '& h2': {\n            color: '#9aa1a5',\n            fontSize: '1rem',\n            fontWeight: '300'\n        }\n    }\n});","import { useReducer, useEffect } from 'react';\n\nfunction useLocalStorageReducer(key, reducer, defaultValue) {\n    const [state, dispatch] = useReducer(reducer, defaultValue, () => {\n        let value;\n        try {\n            value = JSON.parse(\n                window.localStorage.getItem(key)|| String(defaultValue)\n            );\n        } catch(e) {\n            value = defaultValue;\n        }\n        return value;\n    });\n\n    console.log(typeof(dispatch));\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state));\n    }, [key, state]);\n    \n    return [state, dispatch];\n}\n\nexport default useLocalStorageReducer;","import { AccordionActions } from '@material-ui/core';\nimport uuid from 'uuid/v4';\nimport { ADD_TODO, REMOVE_TODO, TOGGLE_TODO, EDIT_TODO } from '../constants/actions';\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case ADD_TODO:\n            return [...state, { id: uuid(), task: action.task, completed: false }];\n        case REMOVE_TODO:\n            return state.filter(todo => todo.id !== action.id);\n        case TOGGLE_TODO:\n            return state.map(todo => todo.id === action.id ? { ...todo, completed: !todo.completed } : todo);\n        case EDIT_TODO:\n            return state.map(todo => todo.id === action.id ? { ...todo, task: action.task } : todo);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","export const ADD_TODO = 'ADD_TODO';\nexport const REMOVE_TODO = 'REMOVE_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\nexport const EDIT_TODO = 'EDIT_TODO';","import React, { createContext } from 'react';\nimport useLocalStorageReducer from '../hooks/useLocalStorageReducer';\nimport todosReducer from '../reducers/todos.reducer';\n\nconst defaultTodos = [\n    { id: '0', task: 'Read a book', completed: false },\n    { id: '1', task: 'Eat food', completed: false },\n    { id: '2', task: 'Code a website', completed: false }\n];\n\nexport const TodosContext = createContext();\nexport const DispatchContext = createContext();\n\nexport function TodosProvider(props) {\n    const [todos, dispatch] = useLocalStorageReducer('todos', todosReducer, defaultTodos);\n    console.log(dispatch);\n    return (\n        <TodosContext.Provider value={todos}>\n            <DispatchContext.Provider value={dispatch}>\n                {props.children}\n            </DispatchContext.Provider>\n        </TodosContext.Provider>\n    );\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n    Todo: {\n        width: '100%',\n        height: '2.5rem',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        paddingLeft: '0.5rem',\n        color: '#34495e',\n        fontSize: '1rem',\n        lineHeight: '2.5rem',\n        overflowX: 'hidden',\n        transition: 'all 0.3s ease',\n        '&:hover': {\n            background: 'rgba(0, 0, 0, 0.03)',\n            cursor: 'pointer'\n        },\n        '&:hover div': {\n            opacity: '1'\n        }\n    },\n    icons: {\n        width: '40px',\n        display: 'inline-flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        marginRight: '1rem',\n        float: 'right',\n        transition: 'all 0.3s ease',\n        opacity: '0'\n    }\n});","import { useState } from 'react';\n\nexport default initialValue => {\n    const [value, setValue] = useState(initialValue);\n    const handleChange = e => setValue(e.target.value);\n    const reset = () => setValue(\"\");\n    return [value, handleChange, reset];\n};","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n    EditTodoForm: {\n        width: '100%',\n        marginBottom: '1rem',\n    },\n    input: {\n        width: '85%',\n        background: 'transparent',\n        border: 'none',\n        borderBottom: '1px solid #ccc',\n        fontSize: '1rem',\n        transition: '0.6s',\n        transform: 'translateY(8px)',\n        '&:focus': {\n            borderBottom: '1px solid #58b2dc',\n            outline: 'none'\n        }\n    }\n});","import React, { useContext } from 'react';\nimport { DispatchContext } from '../contexts/todos.context';\nimport useInputState from '../hooks/useInputState';\nimport useStyles from '../styles/EditTodoFormStyles';\nimport { EDIT_TODO } from '../constants/actions';\n\nfunction EditTodoForm({id, task, toggleEditForm}) {\n    const classes = useStyles();\n    const dispatch = useContext(DispatchContext);\n    const [value, handleChange, clearValue] = useInputState(task);\n    return (\n        <form\n            onSubmit={e => {\n                e.preventDefault();\n                dispatch({type: EDIT_TODO, id, task: value});\n                toggleEditForm();\n                clearValue();\n            }}\n            className={classes.EditTodoForm}\n        >\n            <input \n                autoFocus\n                value={value}\n                onChange={handleChange}\n                onClick={e => e.stopPropagation()}\n                className={classes.input}\n            />\n        </form>\n    )\n}\n\nexport default EditTodoForm;","import React, { useContext, memo } from 'react';\nimport { DispatchContext } from '../contexts/todos.context';\nimport useStyles from '../styles/TodoStyles';\nimport { REMOVE_TODO, TOGGLE_TODO } from '../constants/actions';\nimport EditTodoForm from './EditTodoForm';\nimport useToggleState from '../hooks/useToggleState';\n\nfunction Todo({id, task, completed}) {\n    const classes = useStyles();\n    const dispatch = useContext(DispatchContext);\n    const [isEditing, toggle] = useToggleState(false);\n    if (isEditing) {\n        return (\n            <li\n                classname={classes.Todo}\n                style={{overflowY: 'hidden'}}\n            >\n                <EditTodoForm id={id} task={task} toggleEditForm={toggle} />\n            </li>\n        )\n    }\n    return (\n        <li className={classes.Todo}\n            onClick={() => {\n                dispatch({type: TOGGLE_TODO, id})\n            }}\n        >\n            <span \n                style={{\n                    textDecoration: completed ? 'line-through': '',\n                    color: completed ? '#bdc3c7' : '#34495e'\n                }}\n            >\n                {task}\n            </span>\n            <div className={classes.icons}>\n                <i\n                    style={{color: '#c0392b'}}\n                    className=\"fas fa-trash\"\n                    onClick={e => {\n                        e.stopPropagation();\n                        dispatch({ type: REMOVE_TODO, id});\n                    }}\n                />\n            </div>\n        </li>\n    )\n}\n\nexport default memo(Todo);","import { useState } from 'react';\n\nexport default (initialValue = false) => {\n    const [state, setState] = useState(initialValue);\n    const toggle = () => {\n        setState(!state);\n    };\n    return [state, toggle];\n};","import React, { useContext } from 'react';\nimport { TodosContext } from '../contexts/todos.context';\nimport Todo from './Todo';\n\nfunction TodoList() {\n    const todos = useContext(TodosContext);\n    return (\n        <ul style={{ paddingLeft: 10, width: '95%'}}>\n            {todos.map(todo => (\n                <Todo key={todo.id} {...todo} />\n            ))}\n        </ul>\n    );\n};\n\nexport default TodoList;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n    TodoForm: {\n        width: '100%',\n        marginBottom: '1rem'\n    },\n    input: {\n        width: '200%',\n        height: '2rem',\n        background: 'none',\n        border: 'none',\n        borderBottom: '1px solid #34495e',\n        color: '#34495e',\n        fontSize: '1.2rem',\n        fontWeight: '300',\n        outline: 'none'\n    }\n});","import React, { useContext } from 'react';\nimport { DispatchContext } from '../contexts/todos.context';\nimport useInputState from '../hooks/useInputState';\nimport useStyles from '../styles/TodoFormStyles';\nimport { ADD_TODO } from '../constants/actions';\nimport useToggleState from '../hooks/useToggleState';\n\nfunction TodoForm() {\n    const classes = useStyles();\n    const dispatch = useContext(DispatchContext);\n    const [value, handleChange, clearValue] = useInputState('');\n    return (\n        <form\n            onSubmit={e => {\n                e.preventDefault();\n                dispatch({type: ADD_TODO, task: value});\n                clearValue();\n            }}\n            className={classes.TodoForm}\n        >\n            <input \n                placeholder=\"Add task here\"\n                value={value}\n                onChange={handleChange}\n                className={classes.input}\n            />\n        </form>\n    );\n}\n\nexport default TodoForm;","import React from 'react';\nimport { TodosProvider } from '../contexts/todos.context';\nimport TodoList from './TodoList';\nimport TodoForm from './TodoForm';\n\nfunction TodoApp() {\n    return (\n        <TodosProvider>\n            <TodoForm />\n            <TodoList />\n        </TodosProvider>\n    )\n};\n\nexport default TodoApp;","import React from 'react';\nimport useStyles from '../styles/AppStyles';\nimport TodoApp from '../components/TodoApp';\n\nfunction App() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.App}>\n            <header className={classes.header}>\n                <h1>\n                    todo<span>list</span>\n                </h1>\n                <h2>\n                    A todo list app built with React Hooks and Context\n                </h2>\n            </header>\n            <TodoApp />\n        </div>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}